exit
exkit
mapper.to_persistence_model(entity)
exit
mapper.to_persistence_model(entity)
exit
@attributes
entity
c
exit
to_persistence_model(relationship_entity)
relationship_entity
c
exit
n
relationship_entities
n
entity.send(relationship.attribute_name)
entity
c
entity
exit
mapper.to_persistence_model(entity)
mapper = get_mapper_from_entity(entity)
mapper.to_persistence_model(entity)
exit
mapper.to_persistence_model(entity)
mapper = get_mapper_from_entity(entity)
exit
@in_memory_entities
@in_memories_entities
@in_mememories_entities
exit
relationship
exit
relationships
exit
persistence_model.save_changes
persistence_model
n
persistence_model
entity
exit
entity
persistence_model
exit
persistence_model.save_changes
persistence_model = Sequel::Model(mapper.table_name).new(attributes)
attributes
exit
@in_memory_entities
@in_memoery_entities
exit
in_memory_entities[entity.class]
in_memory_entities[entity.class]exit
@in_memory_entities
@in_mememory_entities
exit
persistence_model
sequel_model
exit
sequel_model
exit
mapper.map_from_entity(entity)
exit
mapper
c
n
entity
exit
c
C
persistence_model.merge!(street: 123)
persistence_model
c
entity
persistence_model
c
persistence_model
persistence_model.merge!(map_attributes(entity))
persistence_model.merge(map_attributes(entity))
persistence_model
persistence_model.merge(map_attributes(entity))
exit
map_value_objects(entity)
map_attributes(entity)
exit
persistence_model
entity
c
entity
exit
persistence_model
entity
c
persistence_model
entity
c
entity
persistence_model
c
entity
value_object
persistence_model
c
persistence_model
c
persistence_model
exit
persistence_model
c
persistence_model
exit
persistence_model[:type]
persistence_model[:type
persistence_model
persistence_moodel
persistence_model
exit
c
exit
entity.send(value_object.attribute_name)
persistence_model[value_object.attribute_name] = value_object.mapper.map_from_entity(entity.send(value_object.attribute_name))
persistence_model[value_object.attribute_name] = value_object.mapper
persistence_model[value_object.attribute_name]
value_object.attribute_name
persistence_model
value_object.attribute_name
exit
value_object.attribute_name
exit
real_estate
real_estate = Sequel::Model(@table_name).new(persistence_model)
real_estate = Sequel::Model(@table_name).new
Sequel::Model(@table_name).new
Sequel::Model(@table_name)
exit
persistence_model
exit
persistence_model.save_changes
persistence_model
@attributes
persistence_model
exit
c
exit
"attribute=".to_sym
"attribute=".to_s
persistence_model.send(:type=, "15")
persistence_model.send("type= 15")
persistence_model.send("type = 15")
"#{attribute.to_s} = 'algo'"
c
@attributes[0].to_s
@attributes
exit
:a.to_s
:a
@attributes
persistence_model.type = 'apartment'
persistence_model
exit
Obstinacy.configuration.mappings[RealEstate].map_from_entity(real_estate)
real_estate = RealEstate.new(type: 5, alienated: 5, condominium: 5, address: nil)
Obstinacy.configuration.mappings[RealEstate].map_from_entity(real_estate)
exit
Obstinacy.configuration.mappings[RealEstate].map_from_entity(real_estate)
real_estate = RealEstate.new(type: 5, alienated: 5, condominium: 5, address: nil)
Obstinacy.configuration.mappings[RealEstate].map_from_entity(real_estate)
exit
Obstinacy.configuration.mappings[RealEstate].map_from_entity(real_estate)
real_estate = RealEstate.new(type: 5, alienated: 5, condominium: 5, address: nil)
real_estate = RealEstate.new(type: 5, alienated: 5, condominium: 5, address: nil))
real_estate = RealEstate.new
Obstinacy.configuration.mappings[RealEstate].map_from_entity
Obstinacy.configuration.mappings[RealEstate]
Obstinacy.configuration.mappings[0]
Obstinacy.configuration.mappings
Obstinacy.configuration.mapping
Obstinacy.configuration
exit
real_estate.save_changes
real_estate.zip_code = '08320-310'
real_estate.save_changes
real_estate.id = '4fe6c237-d6d1-4d9f-8b91-aebdde3dcf46'
real_estate.methods
real_estate.values
real_estate.save
real_estate.id = '27814661-b8b1-41e0-9cbb-04a532cc5de2'
4fe6c237-d6d1-4d9f-8b91-aebdde3dcf46\n
`uuidgen`
real_estate.save
real_estate.id = '4fe6c237-d6d1-4d9f-8b91-aebdde3dcf46'
`uuidgen`
real_estate.save
real_estate
real_estate.legal_reference_id = '4b375bf0-912e-11e8-b621-d39d628bb530'
real_estate.id = '92786086-912e-11e8-b016-174b800c5a4d'
DB[:legal_risk_analysis_real_estates].first
DB[:legal_risk_analysis_real_estates].all
DB
Sequel[:legal_risk_analysis_real_estates].all
Sequel[:legal_risk_analysis_real_estates]
Sequel::Model[:legal_risk_analysis_real_estates].all
Sequel::Model
real_estate.save
real_estate = real_estate.new
real_estate.save
real_estate.new
real_estate
real_estate = Sequel::Model(:legal_risk_analysis_real_estates)
Sequel::Model(:legal_risk_analysis_real_estates)
real_estate = Sequel::Model(:legal_risk_analysis_real_estates).new(legal_reference_id: '4b375bf0-912e-11e8-b621-d39d628bb530')
real_estate.delete
real_estate.update(values_to_update)
values_to_update = real_estate.values.select { |key| key != :id }
real_estate.zip_code = "08320310"
real_estate.update(values_to_update)
values_to_update = real_estate.values.select { |key| key != :id }
real_estate.values.select { |key| key != :id }
real_estate
real_estate.foreign_keys
real_estate.fks
real_estate.fk
real_estate.pk
real_estate.oj
real_estate
real_estate.foreign_key
real_estate.fk
real_estate.values.select { |key| [:id, real_estate.fk].include?(key) }
real_estate.values.select { |key| key != :id }
real_estate.values.select { |key| puts key }
{ a: 5}.except
real_estate.values
real_estate.values.except
real_estate.update(real_estate.values)
real_estate.save
real_estate
real_estate.save
real_estate.values
real_estate = Sequel::Model(:legal_risk_analysis_real_estates).new(legal_reference_id: '4b375bf0-912e-11e8-b621-d39d628bb530')
exit
real_estate.save
real_estate.update(real_estate.values)
real_estate.number = "121451412"
real_estate.update(real_estate.values)
real_estate.values
ls
values
values.delete(:legal_reference_id)
values = real_estate.values
real_estate.values.slice(:id)
real_estate.values.except!(:id)
real_estate.values.except(:id)
real_estate.values.delete(:id)
real_estate.values
